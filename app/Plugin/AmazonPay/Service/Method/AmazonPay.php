<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2020-11-16 14:57:02              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPay\Service\Method;use Plugin\AmazonPay\Service\AmazonOrderHelper;use Plugin\AmazonPay\Service\AmazonRequestService;use Eccube\Entity\Order;use Eccube\Repository\Master\OrderStatusRepository;use Eccube\Repository\ProductClassRepository;use Eccube\Service\Payment\PaymentMethodInterface;use Eccube\Service\Payment\PaymentResult;use Eccube\Service\PurchaseFlow\PurchaseContext;use Eccube\Service\PurchaseFlow\PurchaseFlow;use Symfony\Component\Form\FormInterface;class AmazonPay implements PaymentMethodInterface{public function __construct(OrderStatusRepository $orderStatusRepository, ProductClassRepository $productClassRepository, PurchaseFlow $shoppingPurchaseFlow, AmazonOrderHelper $amazonOrderHelper, AmazonRequestService $amazonRequestService){goto XK1MG;hZ8xl:$this->amazonOrderHelper = $amazonOrderHelper;goto PJUaf;XK1MG:$this->orderStatusRepository = $orderStatusRepository;goto p0czF;p0czF:$this->productClassRepository = $productClassRepository;goto qhFCF;qhFCF:$this->purchaseFlow = $shoppingPurchaseFlow;goto hZ8xl;PJUaf:$this->amazonRequestService = $amazonRequestService;goto I7xlw;I7xlw:}public function verify(){return false;}public function apply(){$this->purchaseFlow->prepare($this->Order, new PurchaseContext());return false;}public function checkout(){goto dfDX5;dfDX5:$amazonTradingId = $this->amazonOrderHelper->requestOrderToAmazon($this->Order, $this->amazonOrderReferenceId);goto ucZKF;PclGV:$result = new PaymentResult();goto fpQYJ;xmjd3:return $result;goto sAflr;fpQYJ:$result->setSuccess(true);goto xmjd3;ucZKF:$this->amazonOrderHelper->setAmazonOrder($this->Order, $amazonTradingId);goto L6MKR;L6MKR:$this->purchaseFlow->commit($this->Order, new PurchaseContext());goto PclGV;sAflr:}public function setFormType(FormInterface $form){}public function setOrder(Order $Order){$this->Order = $Order;}public function setAmazonOrderReferenceId($amazonOrderReferenceId){$this->amazonOrderReferenceId = $amazonOrderReferenceId;}}