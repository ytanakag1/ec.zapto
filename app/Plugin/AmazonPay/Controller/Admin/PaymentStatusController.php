<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2020-11-16 14:57:02              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPay\Controller\Admin;use Eccube\Common\Constant;use Eccube\Controller\AbstractController;use Eccube\Entity\Order;use Eccube\Repository\Master\PageMaxRepository;use Eccube\Repository\OrderRepository;use Eccube\Repository\PaymentRepository;use Eccube\Util\FormUtil;use Knp\Component\Pager\PaginatorInterface;use Plugin\AmazonPay\Form\Type\Admin\SearchPaymentType;use Plugin\AmazonPay\Service\Method\AmazonPay;use Plugin\AmazonPay\Service\AmazonOrderHelper;use Plugin\AmazonPay\Repository\Master\AmazonStatusRepository;use Symfony\Component\Routing\Annotation\Route;use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;use Symfony\Component\HttpFoundation\Request;class PaymentStatusController extends AbstractController{protected $paymentStatusRepository;protected $pageMaxRepository;protected $orderRepository;public function __construct(AmazonStatusRepository $amazonStatusRepository, AmazonOrderHelper $amazonOrderHelper, PageMaxRepository $pageMaxRepository, OrderRepository $orderRepository, PaymentRepository $paymentRepository){goto omn35;Wx7xs:$this->paymentRepository = $paymentRepository;goto jAidW;omn35:$this->amazonStatusRepository = $amazonStatusRepository;goto JAKSu;a7Pox:$this->orderRepository = $orderRepository;goto Wx7xs;JAKSu:$this->amazonOrderHelper = $amazonOrderHelper;goto JM6gE;JM6gE:$this->pageMaxRepository = $pageMaxRepository;goto a7Pox;jAidW:}    /**
     * 決済状況一覧画面
     *
     * @Route("/%eccube_admin_route%/amazon_pay/payment_status", name="amazon_pay_admin_payment_status")
     * @Route("/%eccube_admin_route%/amazon_pay/payment_status/{page_no}", requirements={"page_no" = "\d+"}, name="amazon_pay_admin_payment_status_pageno")
     * @Template("@AmazonPay/admin/Order/payment_status.twig")
     */
public function index(Request $request, $page_no = null, PaginatorInterface $paginator){goto u4tox;ZlF4x:goto udcQh;goto lTR7X;KkuBv:NTpnH:goto vAnbS;j7Hha:swIS3:goto BN8yC;tbS3A:if (!$page_count_param) {goto bkAo0;}goto FGJjT;rpcVO:$pageMaxis = $this->pageMaxRepository->findAll();goto tbS3A;PwwJs:fgVEl:goto kiTy9;odB0N:bkAo0:goto nN2Lj;cuLL6:$this->session->set('amazon_pay.admin.payment_status.search', FormUtil::getViewData($searchForm));goto dDzwI;kiTy9:$this->session->set('amazon_pay.admin.payment_status.search.page_no', (int) $page_no);goto KkuBv;D4kXn:goto swIS3;goto r8OGH;dVY1t:if (null !== $page_no || $request->get('resume')) {goto VsirR;}goto g1u_Z;U1jUo:udcQh:goto M3161;W8S1l:SqCI5:goto inUU0;vAnbS:$viewData = $this->session->get('amazon_pay.admin.payment_status.search', []);goto JufyB;FGJjT:foreach ($pageMaxis as $pageMax) {goto qxaRN;kMqhk:$this->session->set('amazon_pay.admin.payment_status.search.page_count', $page_count);goto YtpOx;dtf0v:$page_count = $pageMax->getName();goto kMqhk;qxaRN:if (!($page_count_param == $pageMax->getName())) {goto EJ0rn;}goto dtf0v;L7G8x:EJ0rn:goto a7mr0;a7mr0:Eghov:goto tbm0t;YtpOx:goto H0cA8;goto L7G8x;tbm0t:}goto Rl82F;inUU0:$searchForm->handleRequest($request);goto ODCLl;le8MM:$page_no = $this->session->get('amazon_pay.admin.payment_status.search.page_no', 1);goto tZZ5f;u4tox:$searchForm = $this->createForm(SearchPaymentType::class);goto vnmkp;ODCLl:if ($searchForm->isValid()) {goto IqVy3;}goto I4Asi;zuZXk:$page_no = 1;goto t7cTP;dCzAP:$this->session->set('amazon_pay.admin.payment_status.search', $searchData);goto ridt1;vnmkp:$page_count = $this->session->get('amazon_pay.admin.payment_status.search.page_count', $this->eccubeConfig->get('eccube_default_page_count'));goto aRMCw;nN2Lj:if ('POST' === $request->getMethod()) {goto SqCI5;}goto dVY1t;g1u_Z:$page_no = 1;goto r8wyo;JufyB:$searchData = FormUtil::submitAndGetData($searchForm, $viewData);goto j7Hha;M3161:IgUIp:goto UG5WU;r8OGH:VsirR:goto LO5W6;r8wyo:$searchData = [];goto dCzAP;aRMCw:$page_count_param = (int) $request->get('page_count');goto rpcVO;AecRi:$pagination = $paginator->paginate($qb, $page_no, $page_count);goto kjREj;BN8yC:goto IgUIp;goto W8S1l;I4Asi:return ['searchForm' => $searchForm->createView(), 'pagination' => [], 'pageMaxis' => $pageMaxis, 'page_no' => $page_no, 'page_count' => $page_count, 'has_errors' => true];goto ZlF4x;kjREj:return ['searchForm' => $searchForm->createView(), 'pagination' => $pagination, 'pageMaxis' => $pageMaxis, 'page_no' => $page_no, 'page_count' => $page_count, 'has_errors' => false];goto qN195;Rl82F:H0cA8:goto odB0N;LO5W6:if ($page_no) {goto fgVEl;}goto le8MM;t7cTP:$searchData = $searchForm->getData();goto cuLL6;dDzwI:$this->session->set('amazon_pay.admin.payment_status.search.page_no', $page_no);goto U1jUo;ridt1:$this->session->set('amazon_pay.admin.payment_status.search.page_no', $page_no);goto D4kXn;UG5WU:$qb = $this->createQueryBuilder($searchData);goto AecRi;lTR7X:IqVy3:goto zuZXk;tZZ5f:goto NTpnH;goto PwwJs;qN195:}    /**
     * 一括処理.
     *
     * @Route("/%eccube_admin_route%/amazon_pay/payment_status/request_action/", name="amazon_pay_admin_payment_status_request", methods={"POST"})
     */
public function requestAction(Request $request){goto SmHek;RLWfl:return $this->redirectToRoute('amazon_pay_admin_payment_status_pageno', ['resume' => Constant::ENABLED]);goto fXAa6;rDX8n:foreach ($Orders as $Order) {goto jeeZt;TbfVe:$this->addSuccess($result_message, 'admin');goto yLzx4;oVotY:$this->addError($result_message, 'admin');goto DKgIp;OhajZ:$result_message = "■注文番号:" . $Order->getId() . " ： " . $request_name . "処理に成功しました。";goto TbfVe;JpIlL:if (empty($amazonErr)) {goto anprj;}goto q2GcA;DKgIp:goto NKFhz;goto eyJbR;jeeZt:$amazonErr = $this->amazonOrderHelper->adminRequest($amazon_request, $Order);goto JpIlL;eyJbR:anprj:goto OhajZ;yLzx4:NKFhz:goto NGwBC;NGwBC:ss2t3:goto QvUL9;q2GcA:$result_message = "■注文番号:" . $Order->getId() . " ： " . $request_name . "処理に失敗しました。" . $amazonErr;goto oVotY;QvUL9:}goto nVGg9;iRWVi:$ids = [$requestOrderId];goto bV8Sh;bV8Sh:bX1cT:goto KFMBa;QQn3r:throw new BadRequestHttpException();goto b5XWE;SmHek:$amazon_request = $request->get('amazon_request');goto kpn_9;Gu0D3:CAG_y:goto iRWVi;b5XWE:INR8t:goto pS1Eg;KI3pO:goto bX1cT;goto Gu0D3;kfYuP:$requestOrderId = $request->get('amazon_order_id');goto gY1sn;B2kbD:$Orders = $this->orderRepository->findBy(['id' => $ids]);goto rDX8n;gY1sn:if (!empty($requestOrderId)) {goto CAG_y;}goto Oh2nK;pS1Eg:$this->isTokenValid();goto kfYuP;kpn_9:if (isset($amazon_request)) {goto INR8t;}goto QQn3r;Oh2nK:$ids = $request->get($amazon_request . '_id');goto KI3pO;KFMBa:$request_name = $amazon_request == 'capture' ? '売上' : '取消';goto B2kbD;nVGg9:t54eK:goto RLWfl;fXAa6:}private function createQueryBuilder(array $searchData){goto XKyN9;MJ37p:if (!(!empty($searchData['AmazonStatuses']) && count($searchData['AmazonStatuses']) > 0)) {goto lWZYh;}goto a0tnp;XKyN9:$qb = $this->entityManager->createQueryBuilder();goto snVPk;PBu6d:$qb->andWhere('o.order_date IS NOT NULL');goto bwmdg;Ms77i:lWZYh:goto dbaej;snVPk:$qb->select('o')->from(Order::class, 'o')->orderBy('o.order_date', 'DESC')->addOrderBy('o.id', 'DESC');goto FbtVP;FbtVP:$Payment = $this->paymentRepository->findOneBy(['method_class' => AmazonPay::class]);goto CsdAF;a0tnp:$qb->andWhere($qb->expr()->in('o.AmazonStatus', ':AmazonStatuses'))->setParameter('AmazonStatuses', $searchData['AmazonStatuses']);goto Ms77i;CsdAF:$qb->andWhere('o.Payment = :Payment')->setParameter('Payment', $Payment)->andWhere('o.AmazonStatus IS NOT NULL');goto PBu6d;bwmdg:if (!(!empty($searchData['OrderStatuses']) && count($searchData['OrderStatuses']) > 0)) {goto zPnrV;}goto zM4t0;zM4t0:$qb->andWhere($qb->expr()->in('o.OrderStatus', ':OrderStatuses'))->setParameter('OrderStatuses', $searchData['OrderStatuses']);goto NT_3v;dbaej:return $qb;goto N3z_w;NT_3v:zPnrV:goto MJ37p;N3z_w:}}