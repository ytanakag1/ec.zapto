<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.3   |
    |              on 2020-11-16 14:57:02              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
namespace Plugin\AmazonPay\Form\Extension;use Eccube\Entity\Payment;use Eccube\Form\Type\Shopping\OrderType;use Plugin\AmazonPay\Service\Method\AmazonPay;use Symfony\Bridge\Doctrine\Form\Type\EntityType;use Symfony\Component\Form\AbstractTypeExtension;use Symfony\Component\Form\FormEvent;use Symfony\Component\Form\FormEvents;use Symfony\Component\Form\FormInterface;use Symfony\Component\Form\FormBuilderInterface;use Symfony\Component\HttpFoundation\RequestStack;use Symfony\Component\Validator\Constraints\NotBlank;class OrderTypeExtension extends AbstractTypeExtension{public function __construct(RequestStack $requestStack){$this->requestStack = $requestStack;}public function buildForm(FormBuilderInterface $builder, array $options){goto ncR1S;d4hJE:i4P7Q:goto dNpKv;YaUXN:return;goto d4hJE;dNpKv:$self = $this;goto OQvGB;ncR1S:if (!$options['skip_add_form']) {goto i4P7Q;}goto YaUXN;xhmCy:$builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) use($self) {goto ZPMwx;SYILM:$Order = $form->getData();goto VT9Lu;SR2BQ:$Order->setPaymentMethod($Payment->getMethod());goto DIV3g;eAEPF:vPBdz:goto MCtrc;VT9Lu:$Payments = $this->getPaymentChoices($form);goto q5vpA;Hl7CV:$uri = $request->getUri();goto h0vbI;DIV3g:$data = $event->getData();goto gCu7A;MYn5A:if (!((is_null($Order->getPayment()) || $Order->getPayment()->getMethodClass() === AmazonPay::class) && ($Payment = current($Payments)))) {goto EdITF;}goto dsnfa;dsnfa:$Order->setPayment($Payment);goto SR2BQ;iV5Oh:$event->setData($data);goto Myhuy;q5vpA:$Payments = $this->removeAmazonPayChoice($Payments);goto MYn5A;RUMyB:$form = $event->getForm();goto SYILM;CnooL:$this->addPaymentForm($form, $Payments);goto eAEPF;ZPMwx:$request = $this->requestStack->getMasterRequest();goto Hl7CV;h0vbI:if (!(preg_match('/amazon_shopping/', $uri) == false)) {goto vPBdz;}goto RUMyB;Myhuy:EdITF:goto CnooL;gCu7A:$data['Payment'] = $Payment->getId();goto iV5Oh;MCtrc:});goto xGQEa;OQvGB:$builder->addEventListener(FormEvents::POST_SET_DATA, function (FormEvent $event) use($self) {goto aCwSd;Wv4qJ:if (!($Payment && $Payment->getMethodClass() === AmazonPay::class && preg_match('/shopping_coupon/', $referer))) {goto hB_il;}goto UvHW1;rzg_k:$Order->setPaymentMethod($Payment->getMethod());goto Def1l;sRNSk:$this->addPaymentForm($form, $Payments, $Order->getPayment());goto g84J3;GSiYo:$uri = $request->getUri();goto zTZpV;GYDzq:$Payment = $Order->getPayment();goto Wv4qJ;g84J3:iKgHF:goto JT89T;LKO0T:$referer = $request->headers->get('referer');goto GYDzq;Cbvws:if (!((is_null($Order->getPayment()) || $Order->getPayment()->getMethodClass() === AmazonPay::class) && ($Payment = current($Payments)))) {goto FyJNj;}goto jn85q;M1B8F:return;goto xZmeJ;Def1l:FyJNj:goto sRNSk;GT2Xt:$request = $this->requestStack->getMasterRequest();goto LKO0T;UvHW1:return;goto VucE1;jn85q:$Order->setPayment($Payment);goto rzg_k;VucE1:hB_il:goto GSiYo;xZmeJ:fC9VZ:goto GT2Xt;aCwSd:$Order = $event->getData();goto n8cnI;H5C9Q:$Payments = $this->removeAmazonPayChoice($Payments);goto Cbvws;pbjy0:$form = $event->getForm();goto OS2ON;n8cnI:if (!(null === $Order || !$Order->getId())) {goto fC9VZ;}goto M1B8F;zTZpV:if (!(preg_match('/amazon_shopping/', $uri) == false)) {goto iKgHF;}goto pbjy0;OS2ON:$Payments = $this->getPaymentChoices($form);goto H5C9Q;JT89T:});goto xhmCy;xGQEa:}private function getPaymentChoices(FormInterface $form){return $form->get('Payment')->getConfig()->getAttribute('choice_list')->getChoices();}private function removeAmazonPayChoice($Payments){goto oGeUt;Jio1k:return $Payments;goto OV0U7;yPkED:d4eV2:goto Jio1k;oGeUt:foreach ($Payments as $key => $Payment) {goto QkToG;hm2cL:unset($Payments[$key]);goto JbS8g;QkToG:if (!($Payment->getMethodClass() === AmazonPay::class)) {goto YBkHt;}goto hm2cL;JbS8g:YBkHt:goto QAnxA;QAnxA:ykOG0:goto g3VpY;g3VpY:}goto yPkED;OV0U7:}private function addPaymentForm(FormInterface $form, array $choices, Payment $data = null){goto zPOw2;zPOw2:$message = trans('front.shopping.payment_method_unselected');goto ThlRJ;ThlRJ:if (!empty($choices)) {goto oQ7vO;}goto aF_nd;JWSph:$form->add('Payment', EntityType::class, ['class' => Payment::class, 'choice_label' => 'method', 'expanded' => true, 'multiple' => false, 'placeholder' => false, 'constraints' => [new NotBlank(['message' => $message])], 'choices' => $choices, 'data' => $data, 'invalid_message' => $message]);goto K8etp;aF_nd:$message = trans('front.shopping.payment_method_not_fount');goto m6lJX;m6lJX:oQ7vO:goto JWSph;K8etp:}public function getExtendedType(){return OrderType::class;}}